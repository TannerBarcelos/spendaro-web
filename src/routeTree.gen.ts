/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransactionsIndexImport } from './routes/transactions/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as BudgetIndexImport } from './routes/budget/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'

// Create/Update Routes

const TransactionsIndexRoute = TransactionsIndexImport.update({
  path: '/transactions/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const BudgetIndexRoute = BudgetIndexImport.update({
  path: '/budget/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/budget/': {
      id: '/budget/'
      path: '/budget'
      fullPath: '/budget'
      preLoaderRoute: typeof BudgetIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/transactions/': {
      id: '/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/budget': typeof BudgetIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/transactions': typeof TransactionsIndexRoute
}

export interface FileRoutesByTo {
  '/analytics': typeof AnalyticsIndexRoute
  '/auth': typeof AuthIndexRoute
  '/budget': typeof BudgetIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/transactions': typeof TransactionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/budget/': typeof BudgetIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/transactions/': typeof TransactionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/analytics' | '/auth' | '/budget' | '/dashboard' | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to: '/analytics' | '/auth' | '/budget' | '/dashboard' | '/transactions'
  id:
    | '__root__'
    | '/analytics/'
    | '/auth/'
    | '/budget/'
    | '/dashboard/'
    | '/transactions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  BudgetIndexRoute: typeof BudgetIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  TransactionsIndexRoute: typeof TransactionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  BudgetIndexRoute: BudgetIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  TransactionsIndexRoute: TransactionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/analytics/",
        "/auth/",
        "/budget/",
        "/dashboard/",
        "/transactions/"
      ]
    },
    "/analytics/": {
      "filePath": "analytics/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/budget/": {
      "filePath": "budget/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/transactions/": {
      "filePath": "transactions/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
