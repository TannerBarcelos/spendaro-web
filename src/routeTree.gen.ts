/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as protectedAppImport } from './routes/(protected)/_app'
import { Route as protectedAppTransactIndexImport } from './routes/(protected)/_app/transact/index'
import { Route as protectedAppDashboardIndexImport } from './routes/(protected)/_app/dashboard/index'
import { Route as protectedAppBudgetIndexImport } from './routes/(protected)/_app/budget/index'
import { Route as protectedAppAnalyticsIndexImport } from './routes/(protected)/_app/analytics/index'
import { Route as protectedAppBudgetNewImport } from './routes/(protected)/_app/budget/new'

// Create Virtual Routes

const protectedImport = createFileRoute('/(protected)')()

// Create/Update Routes

const protectedRoute = protectedImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const protectedAppRoute = protectedAppImport.update({
  id: '/_app',
  getParentRoute: () => protectedRoute,
} as any)

const protectedAppTransactIndexRoute = protectedAppTransactIndexImport.update({
  path: '/transact/',
  getParentRoute: () => protectedAppRoute,
} as any)

const protectedAppDashboardIndexRoute = protectedAppDashboardIndexImport.update(
  {
    path: '/dashboard/',
    getParentRoute: () => protectedAppRoute,
  } as any,
)

const protectedAppBudgetIndexRoute = protectedAppBudgetIndexImport.update({
  path: '/budget/',
  getParentRoute: () => protectedAppRoute,
} as any)

const protectedAppAnalyticsIndexRoute = protectedAppAnalyticsIndexImport.update(
  {
    path: '/analytics/',
    getParentRoute: () => protectedAppRoute,
  } as any,
)

const protectedAppBudgetNewRoute = protectedAppBudgetNewImport.update({
  path: '/budget/new',
  getParentRoute: () => protectedAppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_app': {
      id: '/(protected)/_app'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedAppImport
      parentRoute: typeof protectedRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_app/budget/new': {
      id: '/(protected)/_app/budget/new'
      path: '/budget/new'
      fullPath: '/budget/new'
      preLoaderRoute: typeof protectedAppBudgetNewImport
      parentRoute: typeof protectedAppImport
    }
    '/(protected)/_app/analytics/': {
      id: '/(protected)/_app/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof protectedAppAnalyticsIndexImport
      parentRoute: typeof protectedAppImport
    }
    '/(protected)/_app/budget/': {
      id: '/(protected)/_app/budget/'
      path: '/budget'
      fullPath: '/budget'
      preLoaderRoute: typeof protectedAppBudgetIndexImport
      parentRoute: typeof protectedAppImport
    }
    '/(protected)/_app/dashboard/': {
      id: '/(protected)/_app/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedAppDashboardIndexImport
      parentRoute: typeof protectedAppImport
    }
    '/(protected)/_app/transact/': {
      id: '/(protected)/_app/transact/'
      path: '/transact'
      fullPath: '/transact'
      preLoaderRoute: typeof protectedAppTransactIndexImport
      parentRoute: typeof protectedAppImport
    }
  }
}

// Create and export the route tree

interface protectedAppRouteChildren {
  protectedAppBudgetNewRoute: typeof protectedAppBudgetNewRoute
  protectedAppAnalyticsIndexRoute: typeof protectedAppAnalyticsIndexRoute
  protectedAppBudgetIndexRoute: typeof protectedAppBudgetIndexRoute
  protectedAppDashboardIndexRoute: typeof protectedAppDashboardIndexRoute
  protectedAppTransactIndexRoute: typeof protectedAppTransactIndexRoute
}

const protectedAppRouteChildren: protectedAppRouteChildren = {
  protectedAppBudgetNewRoute: protectedAppBudgetNewRoute,
  protectedAppAnalyticsIndexRoute: protectedAppAnalyticsIndexRoute,
  protectedAppBudgetIndexRoute: protectedAppBudgetIndexRoute,
  protectedAppDashboardIndexRoute: protectedAppDashboardIndexRoute,
  protectedAppTransactIndexRoute: protectedAppTransactIndexRoute,
}

const protectedAppRouteWithChildren = protectedAppRoute._addFileChildren(
  protectedAppRouteChildren,
)

interface protectedRouteChildren {
  protectedAppRoute: typeof protectedAppRouteWithChildren
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedAppRoute: protectedAppRouteWithChildren,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof protectedAppRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/budget/new': typeof protectedAppBudgetNewRoute
  '/analytics': typeof protectedAppAnalyticsIndexRoute
  '/budget': typeof protectedAppBudgetIndexRoute
  '/dashboard': typeof protectedAppDashboardIndexRoute
  '/transact': typeof protectedAppTransactIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof protectedAppRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/budget/new': typeof protectedAppBudgetNewRoute
  '/analytics': typeof protectedAppAnalyticsIndexRoute
  '/budget': typeof protectedAppBudgetIndexRoute
  '/dashboard': typeof protectedAppDashboardIndexRoute
  '/transact': typeof protectedAppTransactIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(protected)': typeof protectedRouteWithChildren
  '/(protected)/_app': typeof protectedAppRouteWithChildren
  '/auth/': typeof AuthIndexRoute
  '/(protected)/_app/budget/new': typeof protectedAppBudgetNewRoute
  '/(protected)/_app/analytics/': typeof protectedAppAnalyticsIndexRoute
  '/(protected)/_app/budget/': typeof protectedAppBudgetIndexRoute
  '/(protected)/_app/dashboard/': typeof protectedAppDashboardIndexRoute
  '/(protected)/_app/transact/': typeof protectedAppTransactIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/budget/new'
    | '/analytics'
    | '/budget'
    | '/dashboard'
    | '/transact'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/budget/new'
    | '/analytics'
    | '/budget'
    | '/dashboard'
    | '/transact'
  id:
    | '__root__'
    | '/(protected)'
    | '/(protected)/_app'
    | '/auth/'
    | '/(protected)/_app/budget/new'
    | '/(protected)/_app/analytics/'
    | '/(protected)/_app/budget/'
    | '/(protected)/_app/dashboard/'
    | '/(protected)/_app/transact/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  protectedRoute: typeof protectedRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  protectedRoute: protectedRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(protected)",
        "/auth/"
      ]
    },
    "/(protected)": {
      "filePath": "(protected)",
      "children": [
        "/(protected)/_app"
      ]
    },
    "/(protected)/_app": {
      "filePath": "(protected)/_app.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/_app/budget/new",
        "/(protected)/_app/analytics/",
        "/(protected)/_app/budget/",
        "/(protected)/_app/dashboard/",
        "/(protected)/_app/transact/"
      ]
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/(protected)/_app/budget/new": {
      "filePath": "(protected)/_app/budget/new.tsx",
      "parent": "/(protected)/_app"
    },
    "/(protected)/_app/analytics/": {
      "filePath": "(protected)/_app/analytics/index.tsx",
      "parent": "/(protected)/_app"
    },
    "/(protected)/_app/budget/": {
      "filePath": "(protected)/_app/budget/index.tsx",
      "parent": "/(protected)/_app"
    },
    "/(protected)/_app/dashboard/": {
      "filePath": "(protected)/_app/dashboard/index.tsx",
      "parent": "/(protected)/_app"
    },
    "/(protected)/_app/transact/": {
      "filePath": "(protected)/_app/transact/index.tsx",
      "parent": "/(protected)/_app"
    }
  }
}
ROUTE_MANIFEST_END */
